version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laudratrack-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:3001
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-secret-key-change-in-production
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - laudratrack-network

  # Backend service (placeholder for when you build it)
  backend:
    image: node:18-alpine
    container_name: laudratrack-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/laudratrack
      - JWT_SECRET=your-jwt-secret
      - JWT_EXPIRE=7d
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - laudratrack-network
    # Uncomment when backend is ready:
    # build:
    #   context: ../laudratrack-backend
    #   dockerfile: Dockerfile
    # command: npm start

  # MongoDB database
  mongo:
    image: mongo:7.0-alpine
    container_name: laudratrack-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=laudratrack
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    restart: unless-stopped
    networks:
      - laudratrack-network

  # Optional: Mongo Express for database management UI
  mongo-express:
    image: mongo-express:1.0.0-alpine
    container_name: laudratrack-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password123@mongo:27017/?authSource=admin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password123
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - laudratrack-network

volumes:
  mongo-data:
  mongo-config:

networks:
  laudratrack-network:
    driver: bridge